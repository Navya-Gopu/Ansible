---
- name: Check if host exists in tower inventory
  set_fact:
   get_info: "{{ HOSTS }}"
  tasks:
    - block:
      - name: "Fail if Extra Variable {{ get_info }} does not exist in Ansible Tower's inventory"
        fail:
          msg: "{{ item }} does not exist in Ansible Tower's inventory."
        when: "item not in groups['all']" 
        with_items: "{{ get_info }}"
      rescue:
      - name: Failure to get host in tower inventory
        debug:
          msg: "SYNTBOT_OUTPUT: FAILED:  Task to Check if hosts exists in tower  failed on {{ get_info }}: Failed to find hosts in Ansible tower inventory "
        failed_when: True

 

- name: Playbook Linux ping fail
  hosts: "{{ get_info }}"
  gather_facts: false
  vars:
    - HOSTS:
  tasks:
    - block:
      - name: "Check if host is available on port SSH (22)"
        wait_for:
          host: "{{ inventory_hostname }}"
          port: 22
          connect_timeout: 2
          timeout: 2
          msg: "Fail to connect on port ssh(22) please check if service is running on {{ inventory_hostname }}"
        delegate_to: localhost

 

      - name: Gathering facts 
        become: true
        setup:

 

      - name: Log output for SYNTBOT
        debug:
          msg:
            - "SYNTBOT_OUTPUT: SUCCESSFUL: {{ ansible_host }} is up "
            - "SYNTBOT_DISPLAY: server reboot: {{ '%Y-%m-%d %H:%M %Z' | strftime( ( ansible_date_time.epoch | int ) - ( ansible_uptime_seconds | int )  ) }} server time: {{ '%Y-%m-%d %H:%M %Z' | strftime( ( ansible_date_time.epoch | int )) }}"

 

#      - name: Log output for SYNTBOT
#        debug:
#          msg:
#            - "SYNTBOT_OUTPUT: SUCCESSFUL: {{ get_info }} is up "
#            - "SYNTBOT_DISPLAY: {{ facter_uptime_days }} day(s) / {{ facter_uptime_hours }} hour(s) of uptime"
#        when: facter_uptime_days is defined

 

      rescue:
      - name: Log output for SYNTBOT
        debug:
          msg:
            - "SYNTBOT_OUTPUT: FAILED: Task {{ ansible_failed_task.name}} failed"
        failed_when: True
